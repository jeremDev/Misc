<!DOCTYPE html>
<html>
<head>
<!--
I realized that you could check tic-tac-toe games on (0)1 time, so I decided to build a game and test it out.
-->
<title>Tic-Tac-Toe</title>
<style type="text/css">
body{
	font-family: monospace, arial;
}
a{
	margin: 3px;
	padding: 6px 10px;
	display: inline-block;
	text-decoration: none;
	background-color: #3dd;
}
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script type="text/javascript">
var ticTacToe = {
	dimensions : 3,
	totalCells : 9,
	marked : 0,
	rows : [],
	cols : [],
	leftDiag : null,
	rightDiag : null,
	blank : '_',
	turn : 'X',
	won : '',
	createBoard : function(){
		this.dimensions = parseInt($('#dimensions').val());
		this.totalCells = this.dimensions * this.dimensions;
		this.marked = 0;
		var output = '';
		this.turn = 'X';
		this.won = '';
		this.rows.length = 0;
		this.cols.length = 0;
		this.leftDiag = undefined;
		this.rightDiag = undefined;
		$('#output').html('<p id="turn">X\'s turn</p>');
		for(var i = 0; i < this.dimensions; i++){
			for(var j = 0; j < this.dimensions; j++)
				$('<a href="#">' + this.blank + '</a>').data('row', i).data('col', j).appendTo('#output');
			$('#output').append('<br />');
		}
		var _this = this;
		$('#output>a').click(function(){
			_this.markCell(this);
		});
	},
	otherTurn : function(){
		return (this.turn == 'X') ? 'O' : 'X';
	},
	onDiag : function(direction, row, col){
		if(direction == 'left')
			return row === col;
		return this.dimensions - 1 - row === col;
	},
	markRowCol : function(rowCol, val){
		if(rowCol !== 'rows' && rowCol !== 'cols')
			return false;
		if(this[rowCol][val] == undefined)
			this[rowCol][val] = {player : this.turn, num : 1};
		else if(this[rowCol][val].player != this.turn)
			this[rowCol][val].player = '*';
		else
			this[rowCol][val].num++;
	},
	markDiag : function(dir){
		if(dir !== 'left' && dir !== 'right')
			return false;
		var dirDiag = dir + 'Diag';
		if(this[dirDiag] == undefined)
			this[dirDiag] = {player : this.turn, num : 1};
		else if(this[dirDiag].player != this.turn)
			this[dirDiag].player = '*';
		else
			this[dirDiag].num++;
	},
	markCell : function(obj){
		if($(obj).text() != this.blank || this.won.length === 1)
			return false;
		var row = $(obj).data('row');
		var col = $(obj).data('col');
		this.markRowCol('rows', row);
		this.markRowCol('cols', col);
		if(this.onDiag('left', row, col))
			this.markDiag('left');
		if(this.onDiag('right', row, col))
			this.markDiag('right');
		
		this.marked++;
		
		$(obj).text(this.turn);
		if(this.wins(row, col))
			return false;
		this.turn = this.otherTurn();
		$('#turn').text(this.turn + '\'s turn');
	},
	wins : function(row, col){
		if(this.rows[row].num === this.dimensions 
				|| this.cols[col].num === this.dimensions 
				|| (this.onDiag('left', row, col) && this.leftDiag.num === this.dimensions)
				|| (this.onDiag('right', row, col) && this.rightDiag.num === this.dimensions)){
			$('#turn').html('<strong>' + this.turn + ' won!</strong>');
			this.won = this.turn;
			return true;
		}
		else if(this.marked === this.totalCells){
			$('#turn').html('<strong>Draw!</strong>');
			return true;
		}
		return false;
	},
	reset : function(){
		$('#output').html('');
	}
};

$(document).ready(function(){
	$('#enter').click(function(){
		ticTacToe.createBoard();
	});
});
</script>
</head>
<body>
<h1>Tic-Tac-Toe</h1>
<h3>Enter dimensions (3 or more)</h3>
<input type="text" value="3" id="dimensions" />
<input type="button" value="Enter" id="enter" />
<br />
<div id="output"></div>
</body>
</html>
